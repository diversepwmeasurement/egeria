jobs:
  build:
    if: startsWith(github.repository,'odpi/')
    name: Release
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout source
      uses: actions/checkout@v4.1.0
    - continue-on-error: true
      uses: gradle/wrapper-validation-action@v2
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - continue-on-error: true
      name: Login to container registry (Quay.io)
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.QUAY_IO_ACCESS_TOKEN }}
        registry: quay.io
        username: ${{ secrets.QUAY_IO_USERNAME }}
    - continue-on-error: true
      name: Login to container registry (docker.io)
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      env:
        ORG_GRADLE_PROJECT_mavenRepoPass: ${{ secrets.OSSRH_TOKEN }}
        ORG_GRADLE_PROJECT_mavenRepoUrl: https://oss.sonatype.org/service/local/staging/deploy/maven2
        ORG_GRADLE_PROJECT_mavenRepoUser: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_GPG_KEYID: ${{ secrets.OSSRH_GPG_KEYID }}
        OSSRH_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_PASSPHRASE }}
        OSSRH_GPG_PRIVATE_KEY: ${{ secrets.OSSRH_GPG_PRIVATE_KEY }}
      name: build and publish to maven central
      uses: gradle/gradle-build-action@v3
      with:
        arguments: build publish -Dorg.gradle.parallel=false -Dorg.gradle.caching=false
        cache-read-only: false
    - continue-on-error: true
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - continue-on-error: true
      name: Set Release version env variable
      run: 'echo "VERSION=$(./gradlew properties --no-daemon --console=plain -q |
        grep ''^version:'' | awk ''{printf $2}'')" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Copy the distribution content to be used in docker copy command
      run: 'mkdir -p ./open-metadata-resources/open-metadata-deployment/docker/egeria/build/assembly

        cp -r open-metadata-distribution/open-metadata-assemblies/build/unpacked/egeria-${{
        env.VERSION }}-distribution.tar.gz/. open-metadata-resources/open-metadata-deployment/docker/egeria/build/assembly

        '
    - continue-on-error: true
      name: Build and push(egeria) to quay.io and docker.io
      uses: docker/build-push-action@v5
      with:
        context: ./open-metadata-resources/open-metadata-deployment/docker/egeria
        platforms: linux/amd64,linux/arm64
        push: false
        tags: odpi/egeria:${{ env.VERSION }}, odpi/egeria:stable, quay.io/odpi/egeria:${{
          env.VERSION }}, quay.io/odpi/egeria:stable
    - continue-on-error: true
      name: Build and push(egeria-configure) to quay.io and docker.io
      uses: docker/build-push-action@v5
      with:
        context: ./open-metadata-resources/open-metadata-deployment/docker/configure
        platforms: linux/amd64,linux/arm64
        push: false
        tags: odpi/egeria-configure:${{ env.VERSION }}, odpi/egeria-configure:stable,
          quay.io/odpi/egeria-configure:${{ env.VERSION }}, quay.io/odpi/egeria-configure:stable
    - continue-on-error: true
      name: Upload assemblies
      uses: actions/upload-artifact@v4.3.1
      with:
        name: Assemblies
        path: open-metadata-distribution/open-metadata-assemblies/build/distributions/*.gz
name: Release v4
on:
  repository_dispatch:
    types: trigger-ga___release-v4.yml
permissions:
  contents: read
